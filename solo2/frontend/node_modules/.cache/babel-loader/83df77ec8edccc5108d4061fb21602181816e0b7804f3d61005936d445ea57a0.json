{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro\\\\Desktop\\\\AppSabados\\\\20251AppMovilesSabado\\\\solo2\\\\frontend\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  showNotification\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: ''\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [debug, setDebug] = useState(''); // Para depuración\n\n  useEffect(() => {\n    // Cargar la lista de usuarios al montar el componente\n    fetchUsuarios();\n  }, []);\n  const fetchUsuarios = async () => {\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.get(`${apiUrl}/usuarios`);\n      setUsuarios(response.data);\n    } catch (error) {\n      console.error('Error al cargar usuarios:', error);\n      showNotification('Error al cargar la lista de usuarios', 'error');\n    }\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  };\n\n  // Validar formato de email\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Limpiar mensaje de depuración\n    setDebug('');\n\n    // Validar formulario\n    if (!formData.nombre || !formData.email) {\n      showNotification('Nombre y email son requeridos', 'error');\n      return;\n    }\n\n    // Validar formato de email\n    if (!validateEmail(formData.email)) {\n      showNotification('El formato del email no es válido', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      console.log('Enviando datos al servidor:', formData);\n\n      // Hacer la petición al servidor\n      const response = await axios.post(`${apiUrl}/usuarios`, formData);\n      console.log('Respuesta del servidor:', response.data);\n      showNotification('Usuario registrado correctamente!', 'success');\n\n      // Limpiar formulario\n      setFormData({\n        nombre: '',\n        email: ''\n      });\n\n      // Actualizar la lista de usuarios\n      fetchUsuarios();\n    } catch (error) {\n      console.error('Error detallado:', error);\n      let errorMessage = 'Error al conectar con el servidor';\n      if (error.response) {\n        // El servidor respondió con un código de error\n        console.log('Datos de respuesta de error:', error.response.data);\n        errorMessage = error.response.data.error || `Error ${error.response.status}: ${error.response.statusText}`;\n\n        // Guardar información detallada para depuración\n        setDebug(JSON.stringify(error.response.data, null, 2));\n\n        // Mensaje específico para email duplicado\n        if (error.response.data.error) {\n          errorMessage = '❌ Este email ya está registrado en el sistema';\n        }\n      } else if (error.request) {\n        errorMessage = 'No se recibió respuesta del servidor';\n        setDebug('No se recibió respuesta del servidor');\n      } else {\n        setDebug(`Error: ${error.message}`);\n      }\n      showNotification(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          placeholder: \"Ingrese su nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Ingrese su correo electr\\xF3nico\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: loading,\n        children: loading ? 'Registrando...' : 'Registrar Usuario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), debug && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Informaci\\xF3n de depuraci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: debug\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usuarios-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Usuarios Registrados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), usuarios.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: usuarios.map((usuario, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: usuario.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this), \" - \", usuario.email]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay usuarios registrados todav\\xEDa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"xU1eLUwnEXQAL9ZWip8dCQpvcBE=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","showNotification","_s","formData","setFormData","nombre","email","usuarios","setUsuarios","loading","setLoading","debug","setDebug","fetchUsuarios","apiUrl","process","env","REACT_APP_API_URL","response","get","data","error","console","handleChange","e","name","value","target","validateEmail","emailRegex","test","handleSubmit","preventDefault","log","post","errorMessage","status","statusText","JSON","stringify","request","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","length","map","usuario","index","_c","$RefreshReg$"],"sources":["C:/Users/Leandro/Desktop/AppSabados/20251AppMovilesSabado/solo2/frontend/src/components/UserForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './UserForm.css';\r\n\r\nconst UserForm = ({ showNotification }) => {\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    email: '' \r\n  });\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [debug, setDebug] = useState(''); // Para depuración\r\n\r\n  useEffect(() => {\r\n    // Cargar la lista de usuarios al montar el componente\r\n    fetchUsuarios();\r\n  }, []);\r\n\r\n  const fetchUsuarios = async () => {\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.get(`${apiUrl}/usuarios`);\r\n      setUsuarios(response.data);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      showNotification('Error al cargar la lista de usuarios', 'error');\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n  };\r\n\r\n  // Validar formato de email\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Limpiar mensaje de depuración\r\n    setDebug('');\r\n    \r\n    // Validar formulario\r\n    if (!formData.nombre || !formData.email) {\r\n      showNotification('Nombre y email son requeridos', 'error');\r\n      return;\r\n    }\r\n\r\n    // Validar formato de email\r\n    if (!validateEmail(formData.email)) {\r\n      showNotification('El formato del email no es válido', 'error');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      console.log('Enviando datos al servidor:', formData);\r\n      \r\n      // Hacer la petición al servidor\r\n      const response = await axios.post(\r\n        `${apiUrl}/usuarios`,\r\n        formData\r\n      );\r\n      \r\n      console.log('Respuesta del servidor:', response.data);\r\n      showNotification('Usuario registrado correctamente!', 'success');\r\n      \r\n      // Limpiar formulario\r\n      setFormData({ nombre: '', email: '' });\r\n      \r\n      // Actualizar la lista de usuarios\r\n      fetchUsuarios();\r\n      \r\n    } catch (error) {\r\n      console.error('Error detallado:', error);\r\n      \r\n      let errorMessage = 'Error al conectar con el servidor';\r\n      \r\n      if (error.response) {\r\n        // El servidor respondió con un código de error\r\n        console.log('Datos de respuesta de error:', error.response.data);\r\n        \r\n        errorMessage = error.response.data.error || \r\n                       `Error ${error.response.status}: ${error.response.statusText}`;\r\n                       \r\n        // Guardar información detallada para depuración\r\n        setDebug(JSON.stringify(error.response.data, null, 2));\r\n                       \r\n        // Mensaje específico para email duplicado\r\n        if (error.response.data.error ) {\r\n          errorMessage = '❌ Este email ya está registrado en el sistema';\r\n        }\r\n      } else if (error.request) {\r\n        errorMessage = 'No se recibió respuesta del servidor';\r\n        setDebug('No se recibió respuesta del servidor');\r\n      } else {\r\n        setDebug(`Error: ${error.message}`);\r\n      }\r\n      \r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-form-container\">\r\n      <h2>Registro de Usuarios</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nombre\"\r\n            name=\"nombre\"\r\n            value={formData.nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Ingrese su nombre\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Ingrese su correo electrónico\"\r\n          />\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"send-button\" \r\n          disabled={loading}\r\n        >\r\n          {loading ? 'Registrando...' : 'Registrar Usuario'}\r\n        </button>\r\n      </form>\r\n\r\n      {debug && (\r\n        <div className=\"debug-info\">\r\n          <h4>Información de depuración:</h4>\r\n          <pre>{debug}</pre>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"usuarios-list\">\r\n        <h3>Usuarios Registrados</h3>\r\n        {usuarios.length > 0 ? (\r\n          <ul>\r\n            {usuarios.map((usuario, index) => (\r\n              <li key={index}>\r\n                <strong>{usuario.nombre}</strong> - {usuario.email}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No hay usuarios registrados todavía.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}