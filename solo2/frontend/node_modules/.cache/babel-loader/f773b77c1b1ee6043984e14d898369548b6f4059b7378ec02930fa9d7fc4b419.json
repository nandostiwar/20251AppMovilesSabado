{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro\\\\Desktop\\\\AppSabados\\\\20251AppMovilesSabado\\\\solo2\\\\frontend\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  showNotification,\n  onValidEmail\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: ''\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [debug, setDebug] = useState(''); // Para depuración\n  const [emailValidated, setEmailValidated] = useState(false);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(false);\n  useEffect(() => {\n    // Cargar la lista de usuarios al montar el componente\n    fetchUsuarios();\n  }, []);\n  const fetchUsuarios = async () => {\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.get(`${apiUrl}/usuarios`);\n      setUsuarios(response.data);\n    } catch (error) {\n      console.error('Error al cargar usuarios:', error);\n      showNotification('Error al cargar la lista de usuarios', 'error');\n    }\n  };\n\n  // Validar formato de email\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Check if email exists in the database\n  const checkEmailAvailability = async email => {\n    if (!email || !validateEmail(email)) {\n      setIsEmailAvailable(false);\n      setEmailValidated(false);\n      return false;\n    }\n\n    // Check locally first to avoid unnecessary API calls\n    const emailExists = usuarios.some(usuario => usuario.email === email);\n    if (emailExists) {\n      setIsEmailAvailable(false);\n      setEmailValidated(false);\n      return false;\n    }\n    setIsEmailAvailable(true);\n    setEmailValidated(true);\n\n    // Notify the parent component\n    if (onValidEmail) {\n      onValidEmail(true);\n    }\n    return true;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // If email field is being updated, validate it\n    if (name === 'email') {\n      checkEmailAvailability(value);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Limpiar mensaje de depuración\n    setDebug('');\n\n    // Validar formulario\n    if (!formData.nombre || !formData.email) {\n      showNotification('Nombre y email son requeridos', 'error');\n      return;\n    }\n\n    // Validar formato de email\n    if (!validateEmail(formData.email)) {\n      showNotification('El formato del email no es válido', 'error');\n      setEmailValidated(false);\n      if (onValidEmail) onValidEmail(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      console.log('Enviando datos al servidor:', formData);\n\n      // Hacer la petición al servidor\n      const response = await axios.post(`${apiUrl}/usuarios`, formData);\n      console.log('Respuesta del servidor:', response.data);\n      showNotification('Usuario registrado correctamente!', 'success');\n\n      // Limpiar formulario\n      setFormData({\n        nombre: '',\n        email: ''\n      });\n\n      // Actualizar la lista de usuarios\n      fetchUsuarios();\n\n      // Reset validation state\n      setEmailValidated(false);\n      setIsEmailAvailable(false);\n      if (onValidEmail) onValidEmail(false);\n    } catch (error) {\n      console.error('Error detallado:', error);\n      let errorMessage = 'Error al conectar con el servidor';\n      if (error.response) {\n        // El servidor respondió con un código de error\n        console.log('Datos de respuesta de error:', error.response.data);\n        errorMessage = error.response.data.error || `Error ${error.response.status}: ${error.response.statusText}`;\n\n        // Guardar información detallada para depuración\n        setDebug(JSON.stringify(error.response.data, null, 2));\n\n        // Mensaje específico para email duplicado\n        if (error.response.data.error) {\n          errorMessage = '❌ Este email ya está registrado en el sistema';\n          setIsEmailAvailable(false);\n          setEmailValidated(false);\n          if (onValidEmail) onValidEmail(false);\n        }\n      } else if (error.request) {\n        errorMessage = 'No se recibió respuesta del servidor';\n        setDebug('No se recibió respuesta del servidor');\n      } else {\n        setDebug(`Error: ${error.message}`);\n      }\n      showNotification(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          placeholder: \"Ingrese su nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Ingrese su correo electr\\xF3nico\",\n          className: formData.email ? isEmailAvailable ? 'valid-email' : 'invalid-email' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), formData.email && !isEmailAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"email-validation-message\",\n          children: \"Este email ya est\\xE1 registrado o no es v\\xE1lido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this), formData.email && isEmailAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"email-validation-success\",\n          children: \"Email disponible\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: loading || !isEmailAvailable || !formData.nombre,\n        children: loading ? 'Registrando...' : 'Registrar Usuario'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), debug && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Informaci\\xF3n de depuraci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: debug\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usuarios-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Usuarios Registrados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), usuarios.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: usuarios.map((usuario, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: usuario.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 17\n          }, this), \" - \", usuario.email]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay usuarios registrados todav\\xEDa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"KFn56tOpPC9A96xFfG+F7QjRyms=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","showNotification","onValidEmail","_s","formData","setFormData","nombre","email","usuarios","setUsuarios","loading","setLoading","debug","setDebug","emailValidated","setEmailValidated","isEmailAvailable","setIsEmailAvailable","fetchUsuarios","apiUrl","process","env","REACT_APP_API_URL","response","get","data","error","console","validateEmail","emailRegex","test","checkEmailAvailability","emailExists","some","usuario","handleChange","e","name","value","target","handleSubmit","preventDefault","log","post","errorMessage","status","statusText","JSON","stringify","request","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","disabled","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Leandro/Desktop/AppSabados/20251AppMovilesSabado/solo2/frontend/src/components/UserForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './UserForm.css';\r\n\r\nconst UserForm = ({ showNotification, onValidEmail }) => {\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    email: '' \r\n  });\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [debug, setDebug] = useState(''); // Para depuración\r\n  const [emailValidated, setEmailValidated] = useState(false);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Cargar la lista de usuarios al montar el componente\r\n    fetchUsuarios();\r\n  }, []);\r\n\r\n  const fetchUsuarios = async () => {\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.get(`${apiUrl}/usuarios`);\r\n      setUsuarios(response.data);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      showNotification('Error al cargar la lista de usuarios', 'error');\r\n    }\r\n  };\r\n\r\n  // Validar formato de email\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Check if email exists in the database\r\n  const checkEmailAvailability = async (email) => {\r\n    if (!email || !validateEmail(email)) {\r\n      setIsEmailAvailable(false);\r\n      setEmailValidated(false);\r\n      return false;\r\n    }\r\n    \r\n    // Check locally first to avoid unnecessary API calls\r\n    const emailExists = usuarios.some(usuario => usuario.email === email);\r\n    if (emailExists) {\r\n      setIsEmailAvailable(false);\r\n      setEmailValidated(false);\r\n      return false;\r\n    }\r\n    \r\n    setIsEmailAvailable(true);\r\n    setEmailValidated(true);\r\n    \r\n    // Notify the parent component\r\n    if (onValidEmail) {\r\n      onValidEmail(true);\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    \r\n    // If email field is being updated, validate it\r\n    if (name === 'email') {\r\n      checkEmailAvailability(value);\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Limpiar mensaje de depuración\r\n    setDebug('');\r\n    \r\n    // Validar formulario\r\n    if (!formData.nombre || !formData.email) {\r\n      showNotification('Nombre y email son requeridos', 'error');\r\n      return;\r\n    }\r\n\r\n    // Validar formato de email\r\n    if (!validateEmail(formData.email)) {\r\n      showNotification('El formato del email no es válido', 'error');\r\n      setEmailValidated(false);\r\n      if (onValidEmail) onValidEmail(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      console.log('Enviando datos al servidor:', formData);\r\n      \r\n      // Hacer la petición al servidor\r\n      const response = await axios.post(\r\n        `${apiUrl}/usuarios`,\r\n        formData\r\n      );\r\n      \r\n      console.log('Respuesta del servidor:', response.data);\r\n      showNotification('Usuario registrado correctamente!', 'success');\r\n      \r\n      // Limpiar formulario\r\n      setFormData({ nombre: '', email: '' });\r\n      \r\n      // Actualizar la lista de usuarios\r\n      fetchUsuarios();\r\n\r\n      // Reset validation state\r\n      setEmailValidated(false);\r\n      setIsEmailAvailable(false);\r\n      if (onValidEmail) onValidEmail(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error detallado:', error);\r\n      \r\n      let errorMessage = 'Error al conectar con el servidor';\r\n      \r\n      if (error.response) {\r\n        // El servidor respondió con un código de error\r\n        console.log('Datos de respuesta de error:', error.response.data);\r\n        \r\n        errorMessage = error.response.data.error || \r\n                       `Error ${error.response.status}: ${error.response.statusText}`;\r\n                       \r\n        // Guardar información detallada para depuración\r\n        setDebug(JSON.stringify(error.response.data, null, 2));\r\n                       \r\n        // Mensaje específico para email duplicado\r\n        if (error.response.data.error ) {\r\n          errorMessage = '❌ Este email ya está registrado en el sistema';\r\n          setIsEmailAvailable(false);\r\n          setEmailValidated(false);\r\n          if (onValidEmail) onValidEmail(false);\r\n        }\r\n      } else if (error.request) {\r\n        errorMessage = 'No se recibió respuesta del servidor';\r\n        setDebug('No se recibió respuesta del servidor');\r\n      } else {\r\n        setDebug(`Error: ${error.message}`);\r\n      }\r\n      \r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-form-container\">\r\n      <h2>Registro de Usuarios</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nombre\"\r\n            name=\"nombre\"\r\n            value={formData.nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Ingrese su nombre\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Ingrese su correo electrónico\"\r\n            className={formData.email ? (isEmailAvailable ? 'valid-email' : 'invalid-email') : ''}\r\n          />\r\n          {formData.email && !isEmailAvailable && (\r\n            <span className=\"email-validation-message\">Este email ya está registrado o no es válido</span>\r\n          )}\r\n          {formData.email && isEmailAvailable && (\r\n            <span className=\"email-validation-success\">Email disponible</span>\r\n          )}\r\n        </div>\r\n        \r\n        <button \r\n          type=\"submit\" \r\n          className=\"send-button\" \r\n          disabled={loading || !isEmailAvailable || !formData.nombre}\r\n        >\r\n          {loading ? 'Registrando...' : 'Registrar Usuario'}\r\n        </button>\r\n      </form>\r\n\r\n      {debug && (\r\n        <div className=\"debug-info\">\r\n          <h4>Información de depuración:</h4>\r\n          <pre>{debug}</pre>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"usuarios-list\">\r\n        <h3>Usuarios Registrados</h3>\r\n        {usuarios.length > 0 ? (\r\n          <ul>\r\n            {usuarios.map((usuario, index) => (\r\n              <li key={index}>\r\n                <strong>{usuario.nombre}</strong> - {usuario.email}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No hay usuarios registrados todavía.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}