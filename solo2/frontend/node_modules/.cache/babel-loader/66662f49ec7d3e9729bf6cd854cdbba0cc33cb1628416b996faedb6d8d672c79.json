{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro\\\\Desktop\\\\AppSabados\\\\20251AppMovilesSabado\\\\solo2\\\\frontend\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport './UserForm.css';\nimport { AuthContext } from '../../context/AuthContext';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  showNotification,\n  onValidEmail\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: '',\n    mensaje: '' // Added mensaje field for email sending\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [debug, setDebug] = useState(''); // Para depuración\n  const [emailValidated, setEmailValidated] = useState(false);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(false);\n  const [isExistingEmail, setIsExistingEmail] = useState(false); // New state for existing emails\n  const [showEmailForm, setShowEmailForm] = useState(false); // State to toggle email form\n  const {\n    user\n  } = useContext(AuthContext); // Obtener el usuario del contexto\n  const navigate = useNavigate(); // Definir navigate para redirecciones\n\n  useEffect(() => {\n    // Redirigir al panel de administrador si el usuario es un administrador\n    if ((user === null || user === void 0 ? void 0 : user.role) === 'admin') {\n      navigate('/admin-panel');\n    }\n  }, [user, navigate]);\n  useEffect(() => {\n    // Cargar la lista de usuarios al montar el componente\n    fetchUsuarios();\n  }, []);\n  const fetchUsuarios = async () => {\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.get(`${apiUrl}/usuarios`);\n      setUsuarios(response.data);\n    } catch (error) {\n      console.error('Error al cargar usuarios:', error);\n      showNotification('Error al cargar la lista de usuarios', 'error');\n    }\n  };\n\n  // Validar formato de email\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Check if email exists in the database\n  const checkEmailAvailability = async email => {\n    if (!email || !validateEmail(email)) {\n      setIsEmailAvailable(false);\n      setEmailValidated(false);\n      setIsExistingEmail(false);\n      return false;\n    }\n\n    // Check locally first to avoid unnecessary API calls\n    const emailExists = usuarios.some(usuario => usuario.email === email);\n    if (emailExists) {\n      setIsEmailAvailable(false);\n      setEmailValidated(true);\n      setIsExistingEmail(true);\n\n      // Notify the parent component\n      if (onValidEmail) {\n        onValidEmail(true);\n      }\n      return true;\n    }\n    setIsEmailAvailable(true);\n    setEmailValidated(true);\n    setIsExistingEmail(false);\n\n    // Notify the parent component\n    if (onValidEmail) {\n      onValidEmail(true);\n    }\n    return true;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // If email field is being updated, validate it\n    if (name === 'email') {\n      checkEmailAvailability(value);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Limpiar mensaje de depuración\n    setDebug('');\n\n    // Validar formulario\n    if (!formData.nombre || !formData.email) {\n      showNotification('Nombre y email son requeridos', 'error');\n      return;\n    }\n\n    // Validar formato de email\n    if (!validateEmail(formData.email)) {\n      showNotification('El formato del email no es válido', 'error');\n      setEmailValidated(false);\n      if (onValidEmail) onValidEmail(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      console.log('Enviando datos al servidor:', formData);\n\n      // Hacer la petición al servidor\n      const response = await axios.post(`${apiUrl}/usuarios`, formData);\n      console.log('Respuesta del servidor:', response.data);\n      showNotification('Usuario registrado correctamente!', 'success');\n\n      // Limpiar formulario\n      setFormData({\n        nombre: '',\n        email: ''\n      });\n\n      // Actualizar la lista de usuarios\n      fetchUsuarios();\n\n      // Reset validation state\n      setEmailValidated(false);\n      setIsEmailAvailable(false);\n      if (onValidEmail) onValidEmail(false);\n    } catch (error) {\n      console.error('Error detallado:', error);\n      let errorMessage = 'Error al conectar con el servidor';\n      if (error.response) {\n        // El servidor respondió con un código de error\n        console.log('Datos de respuesta de error:', error.response.data);\n        errorMessage = error.response.data.error || `Error ${error.response.status}: ${error.response.statusText}`;\n\n        // Guardar información detallada para depuración\n        setDebug(JSON.stringify(error.response.data, null, 2));\n\n        // Mensaje específico para email duplicado\n        if (error.response.data.error) {\n          errorMessage = '❌ Este email ya está registrado en el sistema';\n          setIsEmailAvailable(false);\n          setEmailValidated(false);\n          if (onValidEmail) onValidEmail(false);\n        }\n      } else if (error.request) {\n        errorMessage = 'No se recibió respuesta del servidor';\n        setDebug('No se recibió respuesta del servidor');\n      } else {\n        setDebug(`Error: ${error.message}`);\n      }\n      showNotification(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle email sending\n  const handleSendEmail = async e => {\n    e.preventDefault();\n    if (!formData.email || !formData.mensaje) {\n      showNotification('Email y mensaje son requeridos para enviar correo', 'error');\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      showNotification('El formato del email no es válido', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.post(`${apiUrl}/send-email`, {\n        from: formData.from || 'usuario@app.com',\n        // Añadir remitente\n        to: formData.email,\n        subject: `Mensaje para ${formData.nombre || 'usuario'}`,\n        message: formData.mensaje\n      });\n      showNotification('Correo enviado correctamente!', 'success');\n      setFormData({\n        ...formData,\n        mensaje: ''\n      });\n      setShowEmailForm(false);\n    } catch (error) {\n      console.error('Error al enviar correo:', error);\n      let errorMessage = 'Error al enviar el correo';\n      if (error.response) {\n        errorMessage = error.response.data.message || 'Error en el servidor';\n      }\n      showNotification(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle email form visibility\n  const toggleEmailForm = () => {\n    setShowEmailForm(!showEmailForm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-form-container\",\n    children: (user === null || user === void 0 ? void 0 : user.role) !== 'admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Registro de Usuarios\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nombre\",\n            children: \"Nombre:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"nombre\",\n            name: \"nombre\",\n            value: formData.nombre,\n            onChange: handleChange,\n            placeholder: \"Ingrese su nombre\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: formData.email,\n            onChange: handleChange,\n            placeholder: \"Ingrese su correo electr\\xF3nico\",\n            className: formData.email ? isEmailAvailable ? 'valid-email' : isExistingEmail ? 'existing-email' : 'invalid-email' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }, this), formData.email && !isEmailAvailable && !isExistingEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"email-validation-message\",\n            children: \"Este email no es v\\xE1lido\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 17\n          }, this), formData.email && isEmailAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"email-validation-success\",\n            children: \"Email disponible para registro\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 17\n          }, this), formData.email && isExistingEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"email-validation-message\",\n            children: \"Este email ya est\\xE1 registrado. Puede enviar un correo.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: isExistingEmail ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"email-button\",\n            onClick: toggleEmailForm,\n            children: showEmailForm ? 'Cancelar' : 'Enviar Correo'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"send-button\",\n            disabled: loading || !isEmailAvailable || !formData.nombre,\n            children: loading ? 'Registrando...' : 'Registrar Usuario'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), showEmailForm && isExistingEmail && /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendEmail,\n        className: \"email-message-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"from\",\n            children: \"Tu correo (remitente):\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"from\",\n            name: \"from\",\n            value: formData.from || '',\n            onChange: handleChange,\n            placeholder: \"tu@correo.com\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"mensaje\",\n            children: \"Mensaje:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            id: \"mensaje\",\n            name: \"mensaje\",\n            value: formData.mensaje,\n            onChange: handleChange,\n            placeholder: \"Escriba su mensaje\",\n            rows: \"4\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: loading,\n          children: loading ? 'Enviando...' : 'Enviar Correo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 13\n      }, this), debug && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Informaci\\xF3n de depuraci\\xF3n:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n          children: debug\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"usuarios-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Usuarios Registrados\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }, this), usuarios.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: usuarios.map((usuario, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: usuario.nombre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 21\n            }, this), \" - \", usuario.email]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"No hay usuarios registrados todav\\xEDa.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 227,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"bGN2ZE0dGOeE3CUSBRnNpXbdIXw=\", false, function () {\n  return [useNavigate];\n});\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","AuthContext","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserForm","showNotification","onValidEmail","_s","formData","setFormData","nombre","email","mensaje","usuarios","setUsuarios","loading","setLoading","debug","setDebug","emailValidated","setEmailValidated","isEmailAvailable","setIsEmailAvailable","isExistingEmail","setIsExistingEmail","showEmailForm","setShowEmailForm","user","navigate","role","fetchUsuarios","apiUrl","process","env","REACT_APP_API_URL","response","get","data","error","console","validateEmail","emailRegex","test","checkEmailAvailability","emailExists","some","usuario","handleChange","e","name","value","target","handleSubmit","preventDefault","log","post","errorMessage","status","statusText","JSON","stringify","request","message","handleSendEmail","from","to","subject","toggleEmailForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","onClick","disabled","required","rows","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Leandro/Desktop/AppSabados/20251AppMovilesSabado/solo2/frontend/src/components/UserForm.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport './UserForm.css';\r\nimport { AuthContext } from '../../context/AuthContext';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst UserForm = ({ showNotification, onValidEmail }) => {\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    email: '',\r\n    mensaje: '' // Added mensaje field for email sending\r\n  });\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [debug, setDebug] = useState(''); // Para depuración\r\n  const [emailValidated, setEmailValidated] = useState(false);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(false);\r\n  const [isExistingEmail, setIsExistingEmail] = useState(false); // New state for existing emails\r\n  const [showEmailForm, setShowEmailForm] = useState(false); // State to toggle email form\r\n  const { user } = useContext(AuthContext); // Obtener el usuario del contexto\r\n  const navigate = useNavigate(); // Definir navigate para redirecciones\r\n\r\n  useEffect(() => {\r\n    // Redirigir al panel de administrador si el usuario es un administrador\r\n    if (user?.role === 'admin') {\r\n      navigate('/admin-panel');\r\n    }\r\n  }, [user, navigate]);\r\n\r\n  useEffect(() => {\r\n    // Cargar la lista de usuarios al montar el componente\r\n    fetchUsuarios();\r\n  }, []);\r\n\r\n  const fetchUsuarios = async () => {\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.get(`${apiUrl}/usuarios`);\r\n      setUsuarios(response.data);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      showNotification('Error al cargar la lista de usuarios', 'error');\r\n    }\r\n  };\r\n\r\n  // Validar formato de email\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Check if email exists in the database\r\n  const checkEmailAvailability = async (email) => {\r\n    if (!email || !validateEmail(email)) {\r\n      setIsEmailAvailable(false);\r\n      setEmailValidated(false);\r\n      setIsExistingEmail(false);\r\n      return false;\r\n    }\r\n    \r\n    // Check locally first to avoid unnecessary API calls\r\n    const emailExists = usuarios.some(usuario => usuario.email === email);\r\n    if (emailExists) {\r\n      setIsEmailAvailable(false);\r\n      setEmailValidated(true);\r\n      setIsExistingEmail(true);\r\n      \r\n      // Notify the parent component\r\n      if (onValidEmail) {\r\n        onValidEmail(true);\r\n      }\r\n      \r\n      return true;\r\n    }\r\n    \r\n    setIsEmailAvailable(true);\r\n    setEmailValidated(true);\r\n    setIsExistingEmail(false);\r\n    \r\n    // Notify the parent component\r\n    if (onValidEmail) {\r\n      onValidEmail(true);\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    \r\n    // If email field is being updated, validate it\r\n    if (name === 'email') {\r\n      checkEmailAvailability(value);\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Limpiar mensaje de depuración\r\n    setDebug('');\r\n    \r\n    // Validar formulario\r\n    if (!formData.nombre || !formData.email) {\r\n      showNotification('Nombre y email son requeridos', 'error');\r\n      return;\r\n    }\r\n\r\n    // Validar formato de email\r\n    if (!validateEmail(formData.email)) {\r\n      showNotification('El formato del email no es válido', 'error');\r\n      setEmailValidated(false);\r\n      if (onValidEmail) onValidEmail(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      console.log('Enviando datos al servidor:', formData);\r\n      \r\n      // Hacer la petición al servidor\r\n      const response = await axios.post(\r\n        `${apiUrl}/usuarios`,\r\n        formData\r\n      );\r\n      \r\n      console.log('Respuesta del servidor:', response.data);\r\n      showNotification('Usuario registrado correctamente!', 'success');\r\n      \r\n      // Limpiar formulario\r\n      setFormData({ nombre: '', email: '' });\r\n      \r\n      // Actualizar la lista de usuarios\r\n      fetchUsuarios();\r\n\r\n      // Reset validation state\r\n      setEmailValidated(false);\r\n      setIsEmailAvailable(false);\r\n      if (onValidEmail) onValidEmail(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error detallado:', error);\r\n      \r\n      let errorMessage = 'Error al conectar con el servidor';\r\n      \r\n      if (error.response) {\r\n        // El servidor respondió con un código de error\r\n        console.log('Datos de respuesta de error:', error.response.data);\r\n        \r\n        errorMessage = error.response.data.error || \r\n                       `Error ${error.response.status}: ${error.response.statusText}`;\r\n                       \r\n        // Guardar información detallada para depuración\r\n        setDebug(JSON.stringify(error.response.data, null, 2));\r\n                       \r\n        // Mensaje específico para email duplicado\r\n        if (error.response.data.error ) {\r\n          errorMessage = '❌ Este email ya está registrado en el sistema';\r\n          setIsEmailAvailable(false);\r\n          setEmailValidated(false);\r\n          if (onValidEmail) onValidEmail(false);\r\n        }\r\n      } else if (error.request) {\r\n        errorMessage = 'No se recibió respuesta del servidor';\r\n        setDebug('No se recibió respuesta del servidor');\r\n      } else {\r\n        setDebug(`Error: ${error.message}`);\r\n      }\r\n      \r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle email sending\r\n  const handleSendEmail = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.email || !formData.mensaje) {\r\n      showNotification('Email y mensaje son requeridos para enviar correo', 'error');\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      showNotification('El formato del email no es válido', 'error');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.post(`${apiUrl}/send-email`, {\r\n        from: formData.from || 'usuario@app.com',  // Añadir remitente\r\n        to: formData.email,\r\n        subject: `Mensaje para ${formData.nombre || 'usuario'}`,\r\n        message: formData.mensaje\r\n      });\r\n      \r\n      showNotification('Correo enviado correctamente!', 'success');\r\n      setFormData({ ...formData, mensaje: '' });\r\n      setShowEmailForm(false);\r\n    } catch (error) {\r\n      console.error('Error al enviar correo:', error);\r\n      let errorMessage = 'Error al enviar el correo';\r\n      \r\n      if (error.response) {\r\n        errorMessage = error.response.data.message || 'Error en el servidor';\r\n      }\r\n      \r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Toggle email form visibility\r\n  const toggleEmailForm = () => {\r\n    setShowEmailForm(!showEmailForm);\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-form-container\">\r\n      {user?.role !== 'admin' && (\r\n        <> {/* Mostrar solo si no es administrador */}\r\n          <h2>Registro de Usuarios</h2>\r\n          <form onSubmit={handleSubmit}>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"nombre\">Nombre:</label>\r\n              <input\r\n                type=\"text\"\r\n                id=\"nombre\"\r\n                name=\"nombre\"\r\n                value={formData.nombre}\r\n                onChange={handleChange}\r\n                placeholder=\"Ingrese su nombre\"\r\n              />\r\n            </div>\r\n            \r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"email\">Email:</label>\r\n              <input\r\n                type=\"email\"\r\n                id=\"email\"\r\n                name=\"email\"\r\n                value={formData.email}\r\n                onChange={handleChange}\r\n                placeholder=\"Ingrese su correo electrónico\"\r\n                className={formData.email ? (isEmailAvailable ? 'valid-email' : isExistingEmail ? 'existing-email' : 'invalid-email') : ''}\r\n              />\r\n              {formData.email && !isEmailAvailable && !isExistingEmail && (\r\n                <span className=\"email-validation-message\">Este email no es válido</span>\r\n              )}\r\n              {formData.email && isEmailAvailable && (\r\n                <span className=\"email-validation-success\">Email disponible para registro</span>\r\n              )}\r\n              {formData.email && isExistingEmail && (\r\n                <span className=\"email-validation-message\">Este email ya está registrado. Puede enviar un correo.</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"button-container\">\r\n              {isExistingEmail ? (\r\n                <button \r\n                  type=\"button\"\r\n                  className=\"email-button\"\r\n                  onClick={toggleEmailForm}\r\n                >\r\n                  {showEmailForm ? 'Cancelar' : 'Enviar Correo'}\r\n                </button>\r\n              ) : (\r\n                <button \r\n                  type=\"submit\" \r\n                  className=\"send-button\" \r\n                  disabled={loading || !isEmailAvailable || !formData.nombre}\r\n                >\r\n                  {loading ? 'Registrando...' : 'Registrar Usuario'}\r\n                </button>\r\n              )}\r\n            </div>\r\n          </form>\r\n\r\n          {showEmailForm && isExistingEmail && (\r\n            <form onSubmit={handleSendEmail} className=\"email-message-form\">\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"from\">Tu correo (remitente):</label>\r\n                <input\r\n                  type=\"email\"\r\n                  id=\"from\"\r\n                  name=\"from\"\r\n                  value={formData.from || ''}\r\n                  onChange={handleChange}\r\n                  placeholder=\"tu@correo.com\"\r\n                  required\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label htmlFor=\"mensaje\">Mensaje:</label>\r\n                <textarea\r\n                  id=\"mensaje\"\r\n                  name=\"mensaje\"\r\n                  value={formData.mensaje}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Escriba su mensaje\"\r\n                  rows=\"4\"\r\n                  required\r\n                ></textarea>\r\n              </div>\r\n              <button \r\n                type=\"submit\"\r\n                className=\"send-button\"\r\n                disabled={loading}\r\n              >\r\n                {loading ? 'Enviando...' : 'Enviar Correo'}\r\n              </button>\r\n            </form>\r\n          )}\r\n\r\n          {debug && (\r\n            <div className=\"debug-info\">\r\n              <h4>Información de depuración:</h4>\r\n              <pre>{debug}</pre>\r\n            </div>\r\n          )}\r\n\r\n          <div className=\"usuarios-list\">\r\n            <h3>Usuarios Registrados</h3>\r\n            {usuarios.length > 0 ? (\r\n              <ul>\r\n                {usuarios.map((usuario, index) => (\r\n                  <li key={index}>\r\n                    <strong>{usuario.nombre}</strong> - {usuario.email}\r\n                  </li>\r\n                ))}\r\n              </ul>\r\n            ) : (\r\n              <p>No hay usuarios registrados todavía.</p>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}