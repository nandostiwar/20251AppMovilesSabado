{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Leandro\\\\Desktop\\\\AppSabados\\\\20251AppMovilesSabado\\\\solo2\\\\frontend\\\\src\\\\components\\\\UserForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './UserForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserForm = ({\n  showNotification,\n  onValidEmail\n}) => {\n  _s();\n  const [formData, setFormData] = useState({\n    nombre: '',\n    email: '',\n    mensaje: '' // Added mensaje field for email sending\n  });\n  const [usuarios, setUsuarios] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [debug, setDebug] = useState(''); // Para depuración\n  const [emailValidated, setEmailValidated] = useState(false);\n  const [isEmailAvailable, setIsEmailAvailable] = useState(false);\n  const [isExistingEmail, setIsExistingEmail] = useState(false); // New state for existing emails\n  const [showEmailForm, setShowEmailForm] = useState(false); // State to toggle email form\n\n  useEffect(() => {\n    // Cargar la lista de usuarios al montar el componente\n    fetchUsuarios();\n  }, []);\n  const fetchUsuarios = async () => {\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.get(`${apiUrl}/usuarios`);\n      setUsuarios(response.data);\n    } catch (error) {\n      console.error('Error al cargar usuarios:', error);\n      showNotification('Error al cargar la lista de usuarios', 'error');\n    }\n  };\n\n  // Validar formato de email\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n\n  // Check if email exists in the database\n  const checkEmailAvailability = async email => {\n    if (!email || !validateEmail(email)) {\n      setIsEmailAvailable(false);\n      setEmailValidated(false);\n      setIsExistingEmail(false);\n      return false;\n    }\n\n    // Check locally first to avoid unnecessary API calls\n    const emailExists = usuarios.some(usuario => usuario.email === email);\n    if (emailExists) {\n      setIsEmailAvailable(false);\n      setEmailValidated(true);\n      setIsExistingEmail(true);\n\n      // Notify the parent component\n      if (onValidEmail) {\n        onValidEmail(true);\n      }\n      return true;\n    }\n    setIsEmailAvailable(true);\n    setEmailValidated(true);\n    setIsExistingEmail(false);\n\n    // Notify the parent component\n    if (onValidEmail) {\n      onValidEmail(true);\n    }\n    return true;\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n\n    // If email field is being updated, validate it\n    if (name === 'email') {\n      checkEmailAvailability(value);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    // Limpiar mensaje de depuración\n    setDebug('');\n\n    // Validar formulario\n    if (!formData.nombre || !formData.email) {\n      showNotification('Nombre y email son requeridos', 'error');\n      return;\n    }\n\n    // Validar formato de email\n    if (!validateEmail(formData.email)) {\n      showNotification('El formato del email no es válido', 'error');\n      setEmailValidated(false);\n      if (onValidEmail) onValidEmail(false);\n      return;\n    }\n    setLoading(true);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      console.log('Enviando datos al servidor:', formData);\n\n      // Hacer la petición al servidor\n      const response = await axios.post(`${apiUrl}/usuarios`, formData);\n      console.log('Respuesta del servidor:', response.data);\n      showNotification('Usuario registrado correctamente!', 'success');\n\n      // Limpiar formulario\n      setFormData({\n        nombre: '',\n        email: ''\n      });\n\n      // Actualizar la lista de usuarios\n      fetchUsuarios();\n\n      // Reset validation state\n      setEmailValidated(false);\n      setIsEmailAvailable(false);\n      if (onValidEmail) onValidEmail(false);\n    } catch (error) {\n      console.error('Error detallado:', error);\n      let errorMessage = 'Error al conectar con el servidor';\n      if (error.response) {\n        // El servidor respondió con un código de error\n        console.log('Datos de respuesta de error:', error.response.data);\n        errorMessage = error.response.data.error || `Error ${error.response.status}: ${error.response.statusText}`;\n\n        // Guardar información detallada para depuración\n        setDebug(JSON.stringify(error.response.data, null, 2));\n\n        // Mensaje específico para email duplicado\n        if (error.response.data.error) {\n          errorMessage = '❌ Este email ya está registrado en el sistema';\n          setIsEmailAvailable(false);\n          setEmailValidated(false);\n          if (onValidEmail) onValidEmail(false);\n        }\n      } else if (error.request) {\n        errorMessage = 'No se recibió respuesta del servidor';\n        setDebug('No se recibió respuesta del servidor');\n      } else {\n        setDebug(`Error: ${error.message}`);\n      }\n      showNotification(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle email sending\n  const handleSendEmail = async e => {\n    e.preventDefault();\n    if (!formData.email || !formData.mensaje) {\n      showNotification('Email y mensaje son requeridos para enviar correo', 'error');\n      return;\n    }\n    if (!validateEmail(formData.email)) {\n      showNotification('El formato del email no es válido', 'error');\n      return;\n    }\n    setLoading(true);\n    try {\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\n      const response = await axios.post(`${apiUrl}/send-email`, {\n        from: formData.from || 'usuario@app.com',\n        // Añadir remitente\n        to: formData.email,\n        subject: `Mensaje para ${formData.nombre || 'usuario'}`,\n        message: formData.mensaje\n      });\n      showNotification('Correo enviado correctamente!', 'success');\n      setFormData({\n        ...formData,\n        mensaje: ''\n      });\n      setShowEmailForm(false);\n    } catch (error) {\n      console.error('Error al enviar correo:', error);\n      let errorMessage = 'Error al enviar el correo';\n      if (error.response) {\n        errorMessage = error.response.data.message || 'Error en el servidor';\n      }\n      showNotification(errorMessage, 'error');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Toggle email form visibility\n  const toggleEmailForm = () => {\n    setShowEmailForm(!showEmailForm);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"email-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Registro de Usuarios\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nombre\",\n          children: \"Nombre:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"nombre\",\n          name: \"nombre\",\n          value: formData.nombre,\n          onChange: handleChange,\n          placeholder: \"Ingrese su nombre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          value: formData.email,\n          onChange: handleChange,\n          placeholder: \"Ingrese su correo electr\\xF3nico\",\n          className: formData.email ? isEmailAvailable ? 'valid-email' : isExistingEmail ? 'existing-email' : 'invalid-email' : ''\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this), formData.email && !isEmailAvailable && !isExistingEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"email-validation-message\",\n          children: \"Este email no es v\\xE1lido\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 13\n        }, this), formData.email && isEmailAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"email-validation-success\",\n          children: \"Email disponible para registro\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 13\n        }, this), formData.email && isExistingEmail && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"email-validation-message\",\n          children: \"Este email ya est\\xE1 registrado. Puede enviar un correo.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: isExistingEmail ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"email-button\",\n          onClick: toggleEmailForm,\n          children: showEmailForm ? 'Cancelar' : 'Enviar Correo'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"send-button\",\n          disabled: loading || !isEmailAvailable || !formData.nombre,\n          children: loading ? 'Registrando...' : 'Registrar Usuario'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this), showEmailForm && isExistingEmail && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendEmail,\n      className: \"email-message-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"from\",\n          children: \"Tu correo (remitente):\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"from\",\n          name: \"from\",\n          value: formData.from || '',\n          onChange: handleChange,\n          placeholder: \"tu@correo.com\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mensaje\",\n          children: \"Mensaje:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"mensaje\",\n          name: \"mensaje\",\n          value: formData.mensaje,\n          onChange: handleChange,\n          placeholder: \"Escriba su mensaje\",\n          rows: \"4\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"send-button\",\n        disabled: loading,\n        children: loading ? 'Enviando...' : 'Enviar Correo'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 9\n    }, this), debug && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Informaci\\xF3n de depuraci\\xF3n:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: debug\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"usuarios-list\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Usuarios Registrados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 9\n      }, this), usuarios.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: usuarios.map((usuario, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: usuario.nombre\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 17\n          }, this), \" - \", usuario.email]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No hay usuarios registrados todav\\xEDa.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 5\n  }, this);\n};\n_s(UserForm, \"ZSsgq3N8vAqVOZ1cRF5QcGWz1Jw=\");\n_c = UserForm;\nexport default UserForm;\nvar _c;\n$RefreshReg$(_c, \"UserForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","UserForm","showNotification","onValidEmail","_s","formData","setFormData","nombre","email","mensaje","usuarios","setUsuarios","loading","setLoading","debug","setDebug","emailValidated","setEmailValidated","isEmailAvailable","setIsEmailAvailable","isExistingEmail","setIsExistingEmail","showEmailForm","setShowEmailForm","fetchUsuarios","apiUrl","process","env","REACT_APP_API_URL","response","get","data","error","console","validateEmail","emailRegex","test","checkEmailAvailability","emailExists","some","usuario","handleChange","e","name","value","target","handleSubmit","preventDefault","log","post","errorMessage","status","statusText","JSON","stringify","request","message","handleSendEmail","from","to","subject","toggleEmailForm","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","onChange","placeholder","onClick","disabled","required","rows","length","map","index","_c","$RefreshReg$"],"sources":["C:/Users/Leandro/Desktop/AppSabados/20251AppMovilesSabado/solo2/frontend/src/components/UserForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './UserForm.css';\r\n\r\nconst UserForm = ({ showNotification, onValidEmail }) => {\r\n  const [formData, setFormData] = useState({\r\n    nombre: '',\r\n    email: '',\r\n    mensaje: '' // Added mensaje field for email sending\r\n  });\r\n  const [usuarios, setUsuarios] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [debug, setDebug] = useState(''); // Para depuración\r\n  const [emailValidated, setEmailValidated] = useState(false);\r\n  const [isEmailAvailable, setIsEmailAvailable] = useState(false);\r\n  const [isExistingEmail, setIsExistingEmail] = useState(false); // New state for existing emails\r\n  const [showEmailForm, setShowEmailForm] = useState(false); // State to toggle email form\r\n\r\n  useEffect(() => {\r\n    // Cargar la lista de usuarios al montar el componente\r\n    fetchUsuarios();\r\n  }, []);\r\n\r\n  const fetchUsuarios = async () => {\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.get(`${apiUrl}/usuarios`);\r\n      setUsuarios(response.data);\r\n    } catch (error) {\r\n      console.error('Error al cargar usuarios:', error);\r\n      showNotification('Error al cargar la lista de usuarios', 'error');\r\n    }\r\n  };\r\n\r\n  // Validar formato de email\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  // Check if email exists in the database\r\n  const checkEmailAvailability = async (email) => {\r\n    if (!email || !validateEmail(email)) {\r\n      setIsEmailAvailable(false);\r\n      setEmailValidated(false);\r\n      setIsExistingEmail(false);\r\n      return false;\r\n    }\r\n    \r\n    // Check locally first to avoid unnecessary API calls\r\n    const emailExists = usuarios.some(usuario => usuario.email === email);\r\n    if (emailExists) {\r\n      setIsEmailAvailable(false);\r\n      setEmailValidated(true);\r\n      setIsExistingEmail(true);\r\n      \r\n      // Notify the parent component\r\n      if (onValidEmail) {\r\n        onValidEmail(true);\r\n      }\r\n      \r\n      return true;\r\n    }\r\n    \r\n    setIsEmailAvailable(true);\r\n    setEmailValidated(true);\r\n    setIsExistingEmail(false);\r\n    \r\n    // Notify the parent component\r\n    if (onValidEmail) {\r\n      onValidEmail(true);\r\n    }\r\n    \r\n    return true;\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData({ ...formData, [name]: value });\r\n    \r\n    // If email field is being updated, validate it\r\n    if (name === 'email') {\r\n      checkEmailAvailability(value);\r\n    }\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    // Limpiar mensaje de depuración\r\n    setDebug('');\r\n    \r\n    // Validar formulario\r\n    if (!formData.nombre || !formData.email) {\r\n      showNotification('Nombre y email son requeridos', 'error');\r\n      return;\r\n    }\r\n\r\n    // Validar formato de email\r\n    if (!validateEmail(formData.email)) {\r\n      showNotification('El formato del email no es válido', 'error');\r\n      setEmailValidated(false);\r\n      if (onValidEmail) onValidEmail(false);\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      console.log('Enviando datos al servidor:', formData);\r\n      \r\n      // Hacer la petición al servidor\r\n      const response = await axios.post(\r\n        `${apiUrl}/usuarios`,\r\n        formData\r\n      );\r\n      \r\n      console.log('Respuesta del servidor:', response.data);\r\n      showNotification('Usuario registrado correctamente!', 'success');\r\n      \r\n      // Limpiar formulario\r\n      setFormData({ nombre: '', email: '' });\r\n      \r\n      // Actualizar la lista de usuarios\r\n      fetchUsuarios();\r\n\r\n      // Reset validation state\r\n      setEmailValidated(false);\r\n      setIsEmailAvailable(false);\r\n      if (onValidEmail) onValidEmail(false);\r\n      \r\n    } catch (error) {\r\n      console.error('Error detallado:', error);\r\n      \r\n      let errorMessage = 'Error al conectar con el servidor';\r\n      \r\n      if (error.response) {\r\n        // El servidor respondió con un código de error\r\n        console.log('Datos de respuesta de error:', error.response.data);\r\n        \r\n        errorMessage = error.response.data.error || \r\n                       `Error ${error.response.status}: ${error.response.statusText}`;\r\n                       \r\n        // Guardar información detallada para depuración\r\n        setDebug(JSON.stringify(error.response.data, null, 2));\r\n                       \r\n        // Mensaje específico para email duplicado\r\n        if (error.response.data.error ) {\r\n          errorMessage = '❌ Este email ya está registrado en el sistema';\r\n          setIsEmailAvailable(false);\r\n          setEmailValidated(false);\r\n          if (onValidEmail) onValidEmail(false);\r\n        }\r\n      } else if (error.request) {\r\n        errorMessage = 'No se recibió respuesta del servidor';\r\n        setDebug('No se recibió respuesta del servidor');\r\n      } else {\r\n        setDebug(`Error: ${error.message}`);\r\n      }\r\n      \r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle email sending\r\n  const handleSendEmail = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!formData.email || !formData.mensaje) {\r\n      showNotification('Email y mensaje son requeridos para enviar correo', 'error');\r\n      return;\r\n    }\r\n\r\n    if (!validateEmail(formData.email)) {\r\n      showNotification('El formato del email no es válido', 'error');\r\n      return;\r\n    }\r\n    \r\n    setLoading(true);\r\n    \r\n    try {\r\n      const apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000';\r\n      const response = await axios.post(`${apiUrl}/send-email`, {\r\n        from: formData.from || 'usuario@app.com',  // Añadir remitente\r\n        to: formData.email,\r\n        subject: `Mensaje para ${formData.nombre || 'usuario'}`,\r\n        message: formData.mensaje\r\n      });\r\n      \r\n      showNotification('Correo enviado correctamente!', 'success');\r\n      setFormData({ ...formData, mensaje: '' });\r\n      setShowEmailForm(false);\r\n    } catch (error) {\r\n      console.error('Error al enviar correo:', error);\r\n      let errorMessage = 'Error al enviar el correo';\r\n      \r\n      if (error.response) {\r\n        errorMessage = error.response.data.message || 'Error en el servidor';\r\n      }\r\n      \r\n      showNotification(errorMessage, 'error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Toggle email form visibility\r\n  const toggleEmailForm = () => {\r\n    setShowEmailForm(!showEmailForm);\r\n  };\r\n\r\n  return (\r\n    <div className=\"email-form-container\">\r\n      <h2>Registro de Usuarios</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nombre\">Nombre:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"nombre\"\r\n            name=\"nombre\"\r\n            value={formData.nombre}\r\n            onChange={handleChange}\r\n            placeholder=\"Ingrese su nombre\"\r\n          />\r\n        </div>\r\n        \r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            value={formData.email}\r\n            onChange={handleChange}\r\n            placeholder=\"Ingrese su correo electrónico\"\r\n            className={formData.email ? (isEmailAvailable ? 'valid-email' : isExistingEmail ? 'existing-email' : 'invalid-email') : ''}\r\n          />\r\n          {formData.email && !isEmailAvailable && !isExistingEmail && (\r\n            <span className=\"email-validation-message\">Este email no es válido</span>\r\n          )}\r\n          {formData.email && isEmailAvailable && (\r\n            <span className=\"email-validation-success\">Email disponible para registro</span>\r\n          )}\r\n          {formData.email && isExistingEmail && (\r\n            <span className=\"email-validation-message\">Este email ya está registrado. Puede enviar un correo.</span>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"button-container\">\r\n          {isExistingEmail ? (\r\n            <button \r\n              type=\"button\"\r\n              className=\"email-button\"\r\n              onClick={toggleEmailForm}\r\n            >\r\n              {showEmailForm ? 'Cancelar' : 'Enviar Correo'}\r\n            </button>\r\n          ) : (\r\n            <button \r\n              type=\"submit\" \r\n              className=\"send-button\" \r\n              disabled={loading || !isEmailAvailable || !formData.nombre}\r\n            >\r\n              {loading ? 'Registrando...' : 'Registrar Usuario'}\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n\r\n      {showEmailForm && isExistingEmail && (\r\n        <form onSubmit={handleSendEmail} className=\"email-message-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"from\">Tu correo (remitente):</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"from\"\r\n              name=\"from\"\r\n              value={formData.from || ''}\r\n              onChange={handleChange}\r\n              placeholder=\"tu@correo.com\"\r\n              required\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"mensaje\">Mensaje:</label>\r\n            <textarea\r\n              id=\"mensaje\"\r\n              name=\"mensaje\"\r\n              value={formData.mensaje}\r\n              onChange={handleChange}\r\n              placeholder=\"Escriba su mensaje\"\r\n              rows=\"4\"\r\n              required\r\n            ></textarea>\r\n          </div>\r\n          <button \r\n            type=\"submit\"\r\n            className=\"send-button\"\r\n            disabled={loading}\r\n          >\r\n            {loading ? 'Enviando...' : 'Enviar Correo'}\r\n          </button>\r\n        </form>\r\n      )}\r\n\r\n      {debug && (\r\n        <div className=\"debug-info\">\r\n          <h4>Información de depuración:</h4>\r\n          <pre>{debug}</pre>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"usuarios-list\">\r\n        <h3>Usuarios Registrados</h3>\r\n        {usuarios.length > 0 ? (\r\n          <ul>\r\n            {usuarios.map((usuario, index) => (\r\n              <li key={index}>\r\n                <strong>{usuario.nombre}</strong> - {usuario.email}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        ) : (\r\n          <p>No hay usuarios registrados todavía.</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}